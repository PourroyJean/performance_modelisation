_JEAN_FCT_NAME_  17 23 _init
_JEAN_FCT_NAME_  17 33 printf@plt-0x10
_JEAN_FCT_NAME_  17 28 printf@plt
_JEAN_FCT_NAME_  17 28 memset@plt
_JEAN_FCT_NAME_  17 36 __gmon_start__@plt
_JEAN_FCT_NAME_  17 28 malloc@plt
_JEAN_FCT_NAME_  17 39 __libc_start_main@plt
_JEAN_FCT_NAME_  17 26 rand@plt
_JEAN_FCT_NAME_  17 24 _start
_JEAN_FCT_NAME_  17 38 deregister_tm_clones
_JEAN_FCT_NAME_  17 36 register_tm_clones
_JEAN_FCT_NAME_  17 39 __do_global_dtors_aux
_JEAN_FCT_NAME_  17 29 frame_dummy
_JEAN_FCT_NAME_  17 32 _Z7sum_resPdii
_JEAN_FCT_NAME_  17 39 _Z11mult_simplePdS_S_
_JEAN_FCT_NAME_  17 35 _Z8mult_KIJPdS_S_
_JEAN_FCT_NAME_  17 33 _Z8init_matPdii
_JEAN_FCT_NAME_  17 22 main
_JEAN_FCT_NAME_  17 33 __libc_csu_init
_JEAN_FCT_NAME_  17 33 __libc_csu_fini
_JEAN_FCT_NAME_  17 23 _fini
================================================================================================================
================================================================================================================
_0_ CPU: Intel Broadwell microarchitecture, speed 2397.32 MHz (estimated)
_0_ Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 10000000
_0_ Counted INST_RETIRED events (number of instructions retired) with a unit mask of 0x00 (No unit mask) count 10000000
_0_ vma      samples  %        samples  %        app name                 symbol name
_1_ 00400732 771      53.1358  2300     49.6975  multiply                 mult_simple(double*, double*, double*)
_1_ 00400873 632      43.5562  2301     49.7191  multiply                 mult_KIJ(double*, double*, double*)
_1_ 00000000 35        2.4121  10        0.2161  no-vmlinux               /no-vmlinux
_1_ 00018e10 2         0.1378  1         0.0216  ld-2.17.so               strcmp
_1_ 00073710 2         0.1378  1         0.0216  libc-2.17.so             fgetc
_1_ 00000000 1         0.0689  2         0.0432  bash                     /usr/bin/bash
_1_ 00089700 1         0.0689  0              0  libc-2.17.so             __memset_sse2
_1_ 00163e60 1         0.0689  0              0  libc-2.17.so             __strlen_sse2_pminub
_1_ 000a2ca0 1         0.0689  1         0.0216  libc-2.17.so             mbrtoc32
_1_ 00039350 1         0.0689  0              0  libc-2.17.so             random
_1_ 000395b0 1         0.0689  0              0  libc-2.17.so             random_r
_1_ 004009b4 1         0.0689  5         0.1080  multiply                 init_mat(double*, int, int)
_1_ 00000000 1         0.0689  0              0  panfs_stat               /usr/local/sbin/panfs_stat
_1_ 00000000 1         0.0689  0              0  systemd-journald         /usr/lib/systemd/systemd-journald
================================================================================================================
================================================================================================================
_2_ 4196146 168 00400732 00400732 771      53.1358  2300     49.6975  multiply                 mult_simple(double*, double*, double*)
----------------------------------------------------------------------------------------------------------------
           SUM*4        SUM*3        SUM*2          CYCLES       INSTS      ADDRESS     code HEXA               disassembly
----------------------------------------------------------------------------------------------------------------
_5_           52           52           35 |           35          126      400797:	8b 05 b3 18 20 00    	mov    0x2018b3(%rip),%eax        # 602050 <__TMC_END__>
_5_           58           58           17 |           17           35      4007a1:	89 c2                	mov    %eax,%edx
_5_           53           53           41 |           41          133      4007a6:	01 d0                	add    %edx,%eax
_5_           54           12           12 |           12           34      4007aa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
_5_           61           61           42 |           42          116      4007b6:	48 01 c2             	add    %rax,%rdx
_5_           57           57           19 |           19           26      4007bf:	0f af 45 fc          	imul   -0x4(%rbp),%eax
_5_           51           51           38 |           38          121      4007c5:	8b 45 f8             	mov    -0x8(%rbp),%eax
_5_           41           13           13 |           13           30      4007ca:	48 98                	cltq   
_5_           48           48           30 |           28          103      4007d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
_5_           57           56           18 |           18           19      4007db:	f2 0f 10 08          	movsd  (%rax),%xmm1
_5_           57           57           39 |           38          118      4007e5:	0f af 45 fc          	imul   -0x4(%rbp),%eax
_5_           59           19           19 |            1            1      4007e9:	89 c1                	mov    %eax,%ecx
_5_           58           58           18 |           18            9      4007eb:	8b 45 f4             	mov    -0xc(%rbp),%eax
_5_           50           40           40 |           40          106      4007f0:	48 98                	cltq   
_5_           44           42           11 |           10           13      4007fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
_5_           43           34           32 |            1            3      4007fe:	48 01 c8             	add    %rcx,%rax
_5_           42           42           33 |           31          125      400801:	f2 0f 10 10          	movsd  (%rax),%xmm2
_5_           45           11           11 |            2            3      400805:	8b 05 45 18 20 00    	mov    0x201845(%rip),%eax        # 602050 <__TMC_END__>
_5_           43           43            9 |            9           42      40080b:	0f af 45 f4          	imul   -0xc(%rbp),%eax
_5_           41           41           34 |           34          145      400811:	8b 45 f8             	mov    -0x8(%rbp),%eax
_5_           55            7            7 |            7           52      400816:	48 98                	cltq   
_5_          128           65           49 |           48          141      400820:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
_5_          216          154           79 |           16           42      400827:	f2 0f 10 00          	movsd  (%rax),%xmm0
_5_          240          200          138 |           63          170      40082b:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
_5_          187          177          137 |           75          230      40082f:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
_5_          112          112          102 |           62          212      400833:	f2 0f 11 02          	movsd  %xmm0,(%rdx)
_5_           50           50           50 |           40           97      400837:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
_5_           10           10           10 |           10           37      40083b:	8b 05 13 18 20 00    	mov    0x201813(%rip),%eax        # 602054 <M>
----------------------------------------------------------------------------------------------------------------
_7_ LOOP from 400844 to 400797 size= 173 sum(cycles)= 771 sum(inst)= 2300 #inst= 50 IPC= 2.98314 cycles/LOOP= 16.7609
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
_7_ LOOP from 400857 to 40078b size= 204 sum(cycles)= 771 sum(inst)= 2300 #inst= 56 IPC= 2.98314 cycles/LOOP= 18.7722
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
_7_ LOOP from 40086a to 40077f size= 235 sum(cycles)= 771 sum(inst)= 2300 #inst= 62 IPC= 2.98314 cycles/LOOP= 20.7835
----------------------------------------------------------------------------------------------------------------
_2_ 4196467 254 00400873 00400873 632      43.5562  2301     49.7191  multiply                 mult_KIJ(double*, double*, double*)
----------------------------------------------------------------------------------------------------------------
           SUM*4        SUM*3        SUM*2          CYCLES       INSTS      ADDRESS     code HEXA               disassembly
----------------------------------------------------------------------------------------------------------------
_5_           34           34           21 |           21          141      4008d8:	8b 05 72 17 20 00    	mov    0x201772(%rip),%eax        # 602050 <__TMC_END__>
_5_           48           47           13 |           13           64      4008e2:	89 c2                	mov    %eax,%edx
_5_           51           51           35 |           34          128      4008e7:	01 d0                	add    %edx,%eax
_5_           57           18           16 |           16           51      4008eb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
_5_           53           41           41 |            2            1      4008f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
_5_           51           51           39 |           39          119      4008f7:	48 01 c2             	add    %rax,%rdx
_5_           43           43           12 |           12           66      400900:	0f af 45 fc          	imul   -0x4(%rbp),%eax
_5_           47           47           31 |           31          126      400906:	8b 45 f8             	mov    -0x8(%rbp),%eax
_5_           49           16           16 |           16           38      40090b:	48 98                	cltq   
_5_           48           45           33 |           33          126      400915:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
_5_           61           61           15 |           12           29      40091c:	f2 0f 10 08          	movsd  (%rax),%xmm1
_5_           63           49           49 |            3           10      400920:	8b 05 2e 17 20 00    	mov    0x20172e(%rip),%eax        # 602054 <M>
_5_           62           60           46 |           46          123      400926:	0f af 45 fc          	imul   -0x4(%rbp),%eax
_5_           48           48           16 |           14           27      40092c:	8b 45 f4             	mov    -0xc(%rbp),%eax
_5_           34           34           34 |            2            1      40092f:	01 c8                	add    %ecx,%eax
_5_           46           32           32 |           32          123      400931:	48 98                	cltq   
_5_           53           52           14 |           14           23      40093b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
_5_           55           55           39 |           38          144      400942:	f2 0f 10 10          	movsd  (%rax),%xmm2
_5_           54           17           17 |            1            2      400946:	8b 05 04 17 20 00    	mov    0x201704(%rip),%eax        # 602050 <__TMC_END__>
_5_           53           53           16 |           16           36      40094c:	0f af 45 f4          	imul   -0xc(%rbp),%eax
_5_           56           55           37 |           37          156      400952:	8b 45 f8             	mov    -0x8(%rbp),%eax
_5_           57           19           19 |           18           77      400957:	48 98                	cltq   
_5_           40           39            1 |            1            1      400959:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
_5_           54           53           39 |           38          127      400961:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
_5_           58           16           15 |            1            2      400965:	48 01 c8             	add    %rcx,%rax
_5_          101           57           15 |           14           59      400968:	f2 0f 10 00          	movsd  (%rax),%xmm0
_5_          113           87           43 |            1            5      40096c:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
_5_          125          112           86 |           42          151      400970:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
_5_           84           83           70 |           44          132      400974:	f2 0f 11 02          	movsd  %xmm0,(%rdx)
_5_           40           40           39 |           26          132      400978:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
_5_           14           14           14 |           13           66      40097c:	8b 05 ce 16 20 00    	mov    0x2016ce(%rip),%eax        # 602050 <__TMC_END__>
----------------------------------------------------------------------------------------------------------------
_7_ LOOP from 400985 to 4008d8 size= 173 sum(cycles)= 632 sum(inst)= 2300 #inst= 50 IPC= 3.63924 cycles/LOOP= 13.7391
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
_7_ LOOP from 400998 to 4008cc size= 204 sum(cycles)= 632 sum(inst)= 2301 #inst= 56 IPC= 3.64082 cycles/LOOP= 15.3811
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
_7_ LOOP from 4009ab to 4008c0 size= 235 sum(cycles)= 632 sum(inst)= 2301 #inst= 62 IPC= 3.64082 cycles/LOOP= 17.0291
----------------------------------------------------------------------------------------------------------------
_2_ 0 0 00000000 00000000 35        2.4121  10        0.2161  no-vmlinux               /no-vmlinux
----------------------------------------------------------------------------------------------------------------
           SUM*4        SUM*3        SUM*2          CYCLES       INSTS      ADDRESS     code HEXA               disassembly
----------------------------------------------------------------------------------------------------------------
_2_ 101904 0 00018e10 00018e10 2         0.1378  1         0.0216  ld-2.17.so               strcmp
----------------------------------------------------------------------------------------------------------------
           SUM*4        SUM*3        SUM*2          CYCLES       INSTS      ADDRESS     code HEXA               disassembly
----------------------------------------------------------------------------------------------------------------
_2_ 472848 0 00073710 00073710 2         0.1378  1         0.0216  libc-2.17.so             fgetc
----------------------------------------------------------------------------------------------------------------
           SUM*4        SUM*3        SUM*2          CYCLES       INSTS      ADDRESS     code HEXA               disassembly
----------------------------------------------------------------------------------------------------------------
================================================================================================================
================================================================================================================
